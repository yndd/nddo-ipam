//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 NDDO.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by ndd-gen. DO NOT EDIT.

package v1alpha1

import nddv1 "github.com/yndd/ndd-runtime/apis/common/v1"

// GetActive of this IpamIpam.
func (mg *IpamIpam) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpam.
func (mg *IpamIpam) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpam.
func (mg *IpamIpam) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpam.
func (mg *IpamIpam) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpam.
func (mg *IpamIpam) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpam.
func (mg *IpamIpam) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpam.
func (mg *IpamIpam) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpam.
func (mg *IpamIpam) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpam.
func (mg *IpamIpam) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpam.
func (mg *IpamIpam) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpam.
func (mg *IpamIpam) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpam.
func (mg *IpamIpam) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpam.
func (mg *IpamIpam) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpam.
func (mg *IpamIpam) SetTarget(t []string) {
	mg.Status.Target = t
}

// GetActive of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpamTenant.
func (mg *IpamIpamTenant) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpamTenant.
func (mg *IpamIpamTenant) SetTarget(t []string) {
	mg.Status.Target = t
}

// GetActive of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpamTenantNetworkinstance.
func (mg *IpamIpamTenantNetworkinstance) SetTarget(t []string) {
	mg.Status.Target = t
}

// GetActive of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpamTenantNetworkinstanceIpaddress.
func (mg *IpamIpamTenantNetworkinstanceIpaddress) SetTarget(t []string) {
	mg.Status.Target = t
}

// GetActive of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpamTenantNetworkinstanceIpprefix.
func (mg *IpamIpamTenantNetworkinstanceIpprefix) SetTarget(t []string) {
	mg.Status.Target = t
}

// GetActive of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetActive() bool {
	return mg.Spec.Active
}

// GetCondition of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetCondition(ck nddv1.ConditionKind) nddv1.Condition {
	return mg.Status.GetCondition(ck)
}

// GetDeletionPolicy of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetDeletionPolicy() nddv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetExternalLeafRefs() []string {
	return mg.Status.ExternalLeafRefs
}

// GetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetNetworkNodeReference() *nddv1.Reference {
	return mg.Spec.NetworkNodeReference
}

// GetResourceIndexes of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetResourceIndexes() map[string]string {
	return mg.Status.ResourceIndexes
}

// GetTarget of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) GetTarget() []string {
	return mg.Status.Target
}

// SetActive of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetActive(b bool) {
	mg.Spec.Active = b
}

// SetConditions of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetConditions(c ...nddv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetDeletionPolicy(r nddv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetExternalLeafRefs of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetExternalLeafRefs(n []string) {
	mg.Status.ExternalLeafRefs = n
}

// SetNetworkNodeReference of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetNetworkNodeReference(r *nddv1.Reference) {
	mg.Spec.NetworkNodeReference = r
}

// SetResourceIndexes of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetResourceIndexes(n map[string]string) {
	mg.Status.ResourceIndexes = n
}

// SetTarget of this IpamIpamTenantNetworkinstanceIprange.
func (mg *IpamIpamTenantNetworkinstanceIprange) SetTarget(t []string) {
	mg.Status.Target = t
}
